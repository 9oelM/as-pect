// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`pass-fail pass-fail: fail on group afterAll afterAllPointers 1`] = `
Array [
  26,
]
`;

exports[`pass-fail pass-fail: fail on group afterAll afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterAll beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterAll beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterAll pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group afterAll reason 1`] = `"Test suite fail on group afterAll failed because of an afterAll() callback occurred."`;

exports[`pass-fail pass-fail: fail on group afterAll~should run functionPointer 1`] = `27`;

exports[`pass-fail pass-fail: fail on group afterAll~should run message 1`] = `""`;

exports[`pass-fail pass-fail: fail on group afterAll~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: fail on group afterAll~should run pass 1`] = `true`;

exports[`pass-fail pass-fail: fail on group afterEach afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterEach afterEachPointers 1`] = `
Array [
  23,
]
`;

exports[`pass-fail pass-fail: fail on group afterEach beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterEach beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group afterEach pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group afterEach reason 1`] = `"Test suite fail on group afterEach failed because an error occurred in an afterEach() callback."`;

exports[`pass-fail pass-fail: fail on group afterEach~should run functionPointer 1`] = `24`;

exports[`pass-fail pass-fail: fail on group afterEach~should run message 1`] = `""`;

exports[`pass-fail pass-fail: fail on group afterEach~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: fail on group afterEach~should run pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeAll afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeAll afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeAll beforeAllPointers 1`] = `
Array [
  17,
]
`;

exports[`pass-fail pass-fail: fail on group beforeAll beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeAll pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeAll reason 1`] = `"Test suite fail on group beforeAll failed because an error occurred in a beforeAll() callback."`;

exports[`pass-fail pass-fail: fail on group beforeAll~shouldn't run functionPointer 1`] = `18`;

exports[`pass-fail pass-fail: fail on group beforeAll~shouldn't run message 1`] = `""`;

exports[`pass-fail pass-fail: fail on group beforeAll~shouldn't run negated 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeAll~shouldn't run pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeEach afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeEach afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeEach beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: fail on group beforeEach beforeEachPointers 1`] = `
Array [
  20,
]
`;

exports[`pass-fail pass-fail: fail on group beforeEach pass 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeEach reason 1`] = `"Test suite fail on group beforeEach failed because an error occurred in a beforeEach() callback."`;

exports[`pass-fail pass-fail: fail on group beforeEach~shouldn't run functionPointer 1`] = `21`;

exports[`pass-fail pass-fail: fail on group beforeEach~shouldn't run message 1`] = `""`;

exports[`pass-fail pass-fail: fail on group beforeEach~shouldn't run negated 1`] = `false`;

exports[`pass-fail pass-fail: fail on group beforeEach~shouldn't run pass 1`] = `false`;

exports[`pass-fail pass-fail: pass on group afterAll afterAllPointers 1`] = `
Array [
  38,
]
`;

exports[`pass-fail pass-fail: pass on group afterAll afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterAll beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterAll beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterAll pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group afterAll reason 1`] = `""`;

exports[`pass-fail pass-fail: pass on group afterAll~should run functionPointer 1`] = `39`;

exports[`pass-fail pass-fail: pass on group afterAll~should run message 1`] = `""`;

exports[`pass-fail pass-fail: pass on group afterAll~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: pass on group afterAll~should run pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group afterEach afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterEach afterEachPointers 1`] = `
Array [
  35,
]
`;

exports[`pass-fail pass-fail: pass on group afterEach beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterEach beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group afterEach pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group afterEach reason 1`] = `""`;

exports[`pass-fail pass-fail: pass on group afterEach~should run functionPointer 1`] = `36`;

exports[`pass-fail pass-fail: pass on group afterEach~should run message 1`] = `""`;

exports[`pass-fail pass-fail: pass on group afterEach~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: pass on group afterEach~should run pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group beforeAll afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeAll afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeAll beforeAllPointers 1`] = `
Array [
  29,
]
`;

exports[`pass-fail pass-fail: pass on group beforeAll beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeAll pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group beforeAll reason 1`] = `""`;

exports[`pass-fail pass-fail: pass on group beforeAll~should run functionPointer 1`] = `30`;

exports[`pass-fail pass-fail: pass on group beforeAll~should run message 1`] = `""`;

exports[`pass-fail pass-fail: pass on group beforeAll~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: pass on group beforeAll~should run pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group beforeEach afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeEach afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeEach beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass on group beforeEach beforeEachPointers 1`] = `
Array [
  32,
]
`;

exports[`pass-fail pass-fail: pass on group beforeEach pass 1`] = `true`;

exports[`pass-fail pass-fail: pass on group beforeEach reason 1`] = `""`;

exports[`pass-fail pass-fail: pass on group beforeEach~should run functionPointer 1`] = `33`;

exports[`pass-fail pass-fail: pass on group beforeEach~should run message 1`] = `""`;

exports[`pass-fail pass-fail: pass on group beforeEach~should run negated 1`] = `false`;

exports[`pass-fail pass-fail: pass on group beforeEach~should run pass 1`] = `true`;

exports[`pass-fail pass-fail: pass-fail afterAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail afterEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail beforeAllPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail beforeEachPointers 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail reason 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~Throws: should fail when test does not throw functionPointer 1`] = `11`;

exports[`pass-fail pass-fail: pass-fail~Throws: should fail when test does not throw message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~Throws: should fail when test does not throw negated 1`] = `true`;

exports[`pass-fail pass-fail: pass-fail~Throws: should fail when test does not throw pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~Throws: should report a negated test functionPointer 1`] = `10`;

exports[`pass-fail pass-fail: pass-fail~Throws: should report a negated test message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~Throws: should report a negated test negated 1`] = `true`;

exports[`pass-fail pass-fail: pass-fail~Throws: should report a negated test pass 1`] = `true`;

exports[`pass-fail pass-fail: pass-fail~should expect strings functionPointer 1`] = `3`;

exports[`pass-fail pass-fail: pass-fail~should expect strings message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should expect strings negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should expect strings pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual message 1`] = `"two"`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual pointer 1`] = `712`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[74]:51)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|2 (wasm-function[75]:16)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~actual value 1`] = `712`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected message 1`] = `"one"`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected pointer 1`] = `736`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (wasm-function[74]:173)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|2 (wasm-function[75]:16)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should expect strings~expected value 1`] = `736`;

exports[`pass-fail pass-fail: pass-fail~should fail functionPointer 1`] = `2`;

exports[`pass-fail pass-fail: pass-fail~should fail message 1`] = `"expected fail"`;

exports[`pass-fail pass-fail: pass-fail~should fail negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should fail pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report array values functionPointer 1`] = `12`;

exports[`pass-fail pass-fail: pass-fail~should report array values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report array values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report array values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual message 1`] = `"[1,2,3]"`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<~lib/array/Array<i32>>#toStrictEqual (wasm-function[104]:51)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|11 (wasm-function[105]:40)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report array values~actual value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected message 1`] = `"[4,5,6]"`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected stack 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report array values~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values functionPointer 1`] = `4`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual message 1`] = `"NaN"`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<f64>#toBeFinite (wasm-function[79]:38)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|3 (wasm-function[80]:19)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~actual value 1`] = `NaN`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected message 1`] = `"Finite Value"`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected stack 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report expected finite values~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values functionPointer 1`] = `5`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual message 1`] = `"1"`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i32>#toBeFalsy (wasm-function[81]:36)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|4 (wasm-function[82]:12)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~actual value 1`] = `1`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected message 1`] = `"Falsy Value"`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected stack 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report falsy expected values~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report long values functionPointer 1`] = `13`;

exports[`pass-fail pass-fail: pass-fail~should report long values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report long values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report long values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual message 1`] = `"Long Value: -9999999999"`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i64>#toBe (wasm-function[109]:42)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|12 (wasm-function[110]:22)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report long values~actual value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected message 1`] = `"Long Value: 9999999999"`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i64>#toBe (wasm-function[109]:152)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|12 (wasm-function[110]:22)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report long values~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report nulls functionPointer 1`] = `9`;

exports[`pass-fail pass-fail: pass-fail~should report nulls message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report nulls negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report nulls pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual message 1`] = `"null"`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<assembly/__tests__/setup/Vec3/Vec3>#toBeNull (wasm-function[93]:40)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|8 (wasm-function[94]:16)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~actual value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected message 1`] = `"null"`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected negated 1`] = `true`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<assembly/__tests__/setup/Vec3/Vec3>#toBeNull (wasm-function[93]:162)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|8 (wasm-function[94]:16)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report nulls~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report number values functionPointer 1`] = `8`;

exports[`pass-fail pass-fail: pass-fail~should report number values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report number values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report number values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual message 1`] = `"0"`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i32>#toBe (wasm-function[64]:40)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|7 (wasm-function[91]:14)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report number values~actual value 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected message 1`] = `"42"`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i32>#toBe (wasm-function[64]:149)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|7 (wasm-function[91]:14)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report number values~expected value 1`] = `42`;

exports[`pass-fail pass-fail: pass-fail~should report reference values functionPointer 1`] = `7`;

exports[`pass-fail pass-fail: pass-fail~should report reference values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report reference values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report reference values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual bytes 1`] = `
Array [
  0,
  0,
  0,
  0,
  0,
  0,
  240,
  63,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  64,
  0,
  0,
  0,
  0,
  0,
  0,
  8,
  64,
]
`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual message 1`] = `"Reference Value"`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual offset 1`] = `24`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual pointer 1`] = `4736`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<assembly/__tests__/setup/Vec3/Vec3>#toStrictEqual (wasm-function[89]:1098)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|6 (wasm-function[90]:76)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~actual value 1`] = `4736`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected bytes 1`] = `
Array [
  0,
  0,
  0,
  0,
  0,
  0,
  16,
  64,
  0,
  0,
  0,
  0,
  0,
  0,
  20,
  64,
  0,
  0,
  0,
  0,
  0,
  0,
  24,
  64,
]
`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected message 1`] = `"Reference Value"`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected offset 1`] = `24`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected pointer 1`] = `4816`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<assembly/__tests__/setup/Vec3/Vec3>#toStrictEqual (wasm-function[89]:1220)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|6 (wasm-function[90]:76)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report reference values~expected value 1`] = `4816`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values functionPointer 1`] = `6`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual message 1`] = `"0"`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<i32>#toBeTruthy (wasm-function[83]:36)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|5 (wasm-function[84]:12)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~actual value 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected message 1`] = `"Truthy Value"`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected stack 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report truthy expected values~expected value 1`] = `null`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values functionPointer 1`] = `14`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values pass 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual message 1`] = `"4294967294"`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual stack 1`] = `
"    at assembly/internal/Expectation/Expectation<u32>#toBe (wasm-function[114]:40)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|13 (wasm-function[115]:14)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~actual value 1`] = `4294967294`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected bytes 1`] = `Array []`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected message 1`] = `"4294967293"`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected offset 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected pointer 1`] = `0`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected stack 1`] = `
"    at assembly/internal/Expectation/Expectation<u32>#toBe (wasm-function[114]:149)
    at start:assembly/jest-pass-fail~anonymous|0~anonymous|13 (wasm-function[115]:14)
    at assembly/internal/call/__call (wasm-function[149]:7)"
`;

exports[`pass-fail pass-fail: pass-fail~should report u32 values~expected value 1`] = `4294967293`;

exports[`pass-fail pass-fail: pass-fail~this test should pass functionPointer 1`] = `1`;

exports[`pass-fail pass-fail: pass-fail~this test should pass message 1`] = `""`;

exports[`pass-fail pass-fail: pass-fail~this test should pass negated 1`] = `false`;

exports[`pass-fail pass-fail: pass-fail~this test should pass pass 1`] = `true`;
